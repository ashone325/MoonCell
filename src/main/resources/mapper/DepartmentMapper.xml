<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.example.pojo.Department">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dname" jdbcType="VARCHAR" property="dname" />
    <result column="dtel" jdbcType="VARCHAR" property="dtel" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="establishmentdate" jdbcType="TIMESTAMP" property="establishmentdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dname, dtel, description, establishmentdate
  </sql>
  <select id="selectByExample" parameterType="com.example.pojo.DepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.pojo.DepartmentExample">
    delete from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.pojo.Department">
    insert into department (id, dname, dtel, 
      description, establishmentdate)
    values (#{id,jdbcType=INTEGER}, #{dname,jdbcType=VARCHAR}, #{dtel,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{establishmentdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.pojo.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dname != null">
        dname,
      </if>
      <if test="dtel != null">
        dtel,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="establishmentdate != null">
        establishmentdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dname != null">
        #{dname,jdbcType=VARCHAR},
      </if>
      <if test="dtel != null">
        #{dtel,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="establishmentdate != null">
        #{establishmentdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.pojo.DepartmentExample" resultType="java.lang.Long">
    select count(*) from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update department
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dname != null">
        dname = #{record.dname,jdbcType=VARCHAR},
      </if>
      <if test="record.dtel != null">
        dtel = #{record.dtel,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.establishmentdate != null">
        establishmentdate = #{record.establishmentdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update department
    set id = #{record.id,jdbcType=INTEGER},
      dname = #{record.dname,jdbcType=VARCHAR},
      dtel = #{record.dtel,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      establishmentdate = #{record.establishmentdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.pojo.Department">
    update department
    <set>
      <if test="dname != null">
        dname = #{dname,jdbcType=VARCHAR},
      </if>
      <if test="dtel != null">
        dtel = #{dtel,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="establishmentdate != null">
        establishmentdate = #{establishmentdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.pojo.Department">
    update department
    set dname = #{dname,jdbcType=VARCHAR},
      dtel = #{dtel,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      establishmentdate = #{establishmentdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findDepartmentList" resultMap="BaseResultMap">
     select
        <include refid="Base_Column_List"/>
     from department
     order by establishmentdate desc
        <if test="start!=null and limit!=null">
           limit #{start},#{limit}
        </if>
  </select>
  <select id="getTotalDepartments" resultType="int">
     select count(*) from department
  </select>
  <select id="findDepartmentListByname" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from department
    where dname like'%${dname}%'
    order by establishmentdate desc
    <if test="start!=null and limit!=null">
      limit #{start},#{limit}
    </if>
  </select>
  <select id="getTotalDepartmentsByname" resultType="int">
    select count(*) from department where dname like'%${dname}%'
  </select>
</mapper>